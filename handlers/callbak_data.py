from aiogram import types
from misc import dp, bot
import asyncio
from .sqlit import delit_trafik,update_status,update_activity_status
from .generate_markup import check_subscription,subscription_markup,open_markup

content = -1001987248829


@dp.callback_query_handler(text_startswith='write_')
async def write_watch(call: types.callback_query):
    id = call.data[6:]
    print(update_activity_status(id,1))

    if update_activity_status(id,1) == 1:
        await call.message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∏—Å–≤–æ–µ–Ω —Å—Ç–∞—Ç—É—Å - –ù–∞–ø–∏—Å–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ üí¨")
    else:
        await call.message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–æ—Ç–µ. –û—à–∏–±–∫–∞")


@dp.callback_query_handler(text_startswith='buy_')
async def buy_watch(call: types.callback_query):
    id = call.data[4:]
    if update_activity_status(id,2) == 1:
        await call.message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∏—Å–≤–æ–µ–Ω —Å—Ç–∞—Ç—É—Å - –ö—É–ø–∏–ª –∫—É—Ä—Å üí∞")
    else:
        await call.message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–æ—Ç–µ. –û—à–∏–±–∫–∞")


@dp.callback_query_handler(text_startswith='nul_')
async def nul_watch(call: types.callback_query):
    id = call.data[4:]
    if update_activity_status(id, 0) == 1:
        await call.message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∏—Å–≤–æ–µ–Ω –æ–±—ã—á–Ω—ã–π —Å—Ç–∞—Ç—É—Å")
    else:
        await call.message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–æ—Ç–µ. –û—à–∏–±–∫–∞")








@dp.callback_query_handler(lambda call: True, state = '*')
async def answer_push_inline_button(call):


    if call.data == 'false':
        await call.message.answer("–ù–µ–∞) –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑")


    if call.data == 'test2':
        update_status(call.message.chat.id, 1)
        await call.message.answer("–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ï–¥–µ–º –¥–∞–ª—å—à–µüëáüèª")
        await asyncio.sleep(1)
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton(text='–ó–∞–∫—É–ø–∞–µ–º —Ä–µ–∫–ª–∞–º—É', callback_data=f'test3'))
        markup.add(types.InlineKeyboardButton(text='–ü—Ä–æ–¥–∞–µ–º —Ä–µ–∫–ª–∞–º—É', callback_data=f'false'))

        await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=31, reply_markup=markup)




    if call.data == 'test3':
        update_status(call.message.chat.id, 2)
        await call.message.answer("–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ï–¥–µ–º –¥–∞–ª—å—à–µüëáüèª")
        await asyncio.sleep(1)
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton(text='–£ –ï–≤–≥–µ–Ω–∏—è –æ—Ç–ª–∏—á–Ω—ã–π –∫–∞–Ω–∞–ª!', callback_data=f'false'))
        markup.add(types.InlineKeyboardButton(text='–ï–≤–≥–µ–Ω–∏–π - –ú—É–¥–∏–ª–∞', callback_data=f'test4'))

        await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=32, reply_markup=markup)


    if call.data == 'test4':
        update_status(call.message.chat.id, 3)
        await call.message.answer("–ê–±—Å–æ–ª—é—Ç–Ω–æ –≤–µ—Ä–Ω–æ!")
        await asyncio.sleep(1)
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton(text='–ó–∞–±—Ä–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫ üéÅ', url = 'https://t.me/SteveDuck2'))
        await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=34, reply_markup=markup)
